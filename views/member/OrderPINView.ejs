<!DOCTYPE html>
<html lang="en">
<% include ../layouts/HeadLayout %>
<body>
  <% include ../layouts/HeaderLayout %>

  <section id="OrderPINView" class="about-us">
    <div v-cloak class="container">
      <div class="row">

        <div class="col-sm-3 col-md-3 col-lg-3">
          <% include ./MenuView %>
        </div>

        <div class="col-sm-9 col-md-9 col-lg-9">
          <ui-splash :display="splash">
            {{ result.message }}
          </ui-splash>

          <div class="about-us-content">
            <h1 class="member-title">Order PIN</h1>

            <div class="paper">

              <div class="row">
                <div class="col-md-12">

                  <div class="ui-textbox" style="position: relative">
                    <input v-model="form.stockiestId"
                    ref="stockiestId"
                    placeholder="Masukan ID Stokist..."
                    class="awesomplete form-control"
                    @keyup="findMember($event);searchMember($event)"
                    @keyup.enter="forceAwesompleteValue('stockiestId', $event);searchMember($event)"
                    @blur="forceAwesompleteValue('stockiestId', $event);searchMember($event)">

                    <span v-if="memberLoading"
                    style="position: absolute; right: 12px; bottom: 8px" class="icon">
                      <i class="fa fa-spin fa-refresh"></i>
                    </span>
                  </div>

                  <sup class="error-line" style="top: -6px">
                    {{ result.data.errors.stockiestId?result.data.errors.stockiestId.message:'' }}
                  </sup>

                  <sup v-if="form.bank">
                    <b>Rekening: </b>
                    {{ form.bank }} - {{ form.accountNumber }} a/n {{ form.accountName }}
                    <br>&nbsp;
                  </sup>
                </div>
              </div>

              <div class="row">

                <div class="col-md-4">
                  <ui-textbox v-model="price_"
                  disabled>Harga</ui-textbox>
                </div>

                <div class="col-md-4">
                  <ui-textbox v-model="form.qty"
                  only-numeric>Qty</ui-textbox>

                  <sup class="error-line">
                    {{ result.data.errors.qty?result.data.errors.qty.message:'' }}
                  </sup>
                </div>

                <div class="col-md-4">
                  <ui-textbox v-model="total_"
                  disabled>Total</ui-textbox>
                </div>

              </div>

              <div class="row">
                <div class="col-md-12">
                  <br>
                  <ui-button @click="submit"
                  :loading="loading">Submit</ui-button>
                </div>
              </div>


            </div>

          </div>
        </div>

      </div>
    </div>
  </section>

  <script>
    /******************
    <id="Vue">
    ******************/
    var OrderPINView = new Vue({
      el: '#OrderPINView',

      /******************
      <id="_data">
      ******************/
      data() {
        return {
          loading: false,
          memberLoading: false,
          splash: false,

          result: {
            state: '',
            message: '',
            data: { errors: {} },
          },

          memberAwesomplete: '',
          rsMember: [],

          form: {
            stockiestId: '',
            qty: 1,
            price: '<%= rowSetting.pinPrice %>',
            bank: '',
            accountNumber: '',
            accountName: '',
          },

        };
      },

      /******************
      <id="_computed">
      ******************/
      computed: {

        /******************
        <id="_stockiestId">
        ******************/
        stockiestId() {
          var xMemberId = this.form.stockiestId.split('/');
          return xMemberId[0];
        },

        /******************
        <id="_rsMember_">
        ******************/
        rsMember_() {
          return this.rsMember.map(row => row.memberId + '/' + row.member.fullName);
        },

        /******************
        <id="_price_">
        ******************/
        price_() {
          let formattedTotal = 'Rp' +
            this.form.price
            .toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1.");

          return formattedTotal;
        },

        /******************
        <id="_total">
        ******************/
        total() {
          return parseInt(this.form.price) * parseInt(this.form.qty);
        },

        /******************
        <id="_total_">
        ******************/
        total_() {
          let formattedTotal = 'Rp' +
            this.total
            .toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1.");

          return formattedTotal;
        },

        /******************
        <id="_stock">
        ******************/
        // stock() {
        //   let stock = '';
        //
        //   if (this.rowProductActive.stockGroup) {
        //     if (this.rowProductActive.stockGroup[this.form.color]) {
        //
        //       if (this.rowProductActive.stockGroup[this.form.color][this.form.size]) {
        //         stock = this.rowProductActive.stockGroup[this.form.color][this.form.size].balance;
        //         this.rsCart.forEach(rowCart => {
        //           if (rowCart.productId == this.productId &&
        //             rowCart.selectedGroup.color == this.form.color &&
        //             rowCart.selectedGroup.size == this.form.size
        //           )
        //           stock -= rowCart.qty;
        //         });
        //       }
        //
        //     }
        //   }
        //
        //   return stock;
        // },

      },

      /******************
      <id="_mounted">
      ******************/
      mounted() {
        this.memberAwesomplete = new Awesomplete(this.$refs.stockiestId);
      },

      /******************
      <id="_methods">
      ******************/
      methods: {

        /******************
        <id="_forceAwesompleteValue">
        ******************/
        forceAwesompleteValue(textboxId, event) {
          var value = event.currentTarget.value;
          this.form[textboxId] = event.currentTarget.value;
        },

        /******************
        <id="_findMember">
        ******************/
        findMember(event) {

          if ((event.keyCode != 38 && event.keyCode != 40 && event.keyCode != 13)) {

            if (event.currentTarget.value.length == 2) {
              this.memberLoading = true;

              axios.get('/api/stockiest/find/' + this.form.stockiestId).then(response => {

                this.rsMember = response.data.data;

                this.memberAwesomplete.list = this.rsMember_;
                this.memberAwesomplete.evaluate();

                this.memberLoading = false;
              });
            }

          }

        },

        /******************
        <id="_searchMember">
        ******************/
        searchMember(event) {

          this.form.bank = '';
          this.form.accountNumber = '';
          this.form.accountName = '';

          if (event.currentTarget.value.length >= 3) {
            this.memberLoading = true;

            axios.get('/api/stockiest/search/' + this.stockiestId).then(response => {

              if (response.data.state == 'success') {

                var rowMember = response.data.data;

                if (rowMember.bank) this.form.bank = rowMember.bank;
                if (rowMember.accountNumber) this.form.accountNumber = rowMember.accountNumber;
                if (rowMember.accountName) this.form.accountName = rowMember.accountName;
              }

              this.memberLoading = false;
            });
          }

        },

        /******************
        <id="_submit">
        ******************/
        submit() {
          this.loading = true;

          var url = '/api/pin-order';
          var data = {
            ...this.form,
          };
          data.stockiestId = this.stockiestId;
          data.amount = this.total;

          axios.post(url, data).then(response => {

            this.result = response.data;
            if (!this.result.data.errors) this.result.data.errors = {};

            if (response.data.state == 'success') {
              this.form.stockiestId = '';
              this.form.qty = 1;

              this.splash = true;

              setTimeout(() => {
                this.splash = false;
              }, 2000);
            }

            this.loading = false;

            var body = $("html, body");
            body.stop().animate({scrollTop:0}, 500, 'swing');
          });
        },

      },

    });
  </script>

  <% include ../layouts/FooterLayout %>
  <% include ../layouts/FootLayout %>
</body>
</html>
